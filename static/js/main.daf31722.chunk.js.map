{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","arr","split","i","length","charAt","slice","str","join","document","getElementById","select","navigator","clipboard","writeText","Alert","alert","msg","lower","capitalize","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.daf31722.chunk.js","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            {/* <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                About\n              </Link>\n            </li> */}\n          </ul>\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n            <input onClick={props.toggleMode}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n            />\n            <label className=\"form-check-label\" \n             htmlFor=\"flexSwitchCheckDefault\">\n              Enable Dark mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    // console.log(\"UpperCase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Text is UpperCased\", \"success\");\n  };\n\n  const handleOnchange = (event) => {\n    setText(event.target.value);\n    \n  };\n\n  const handleLowClick = () => {\n    setText(text.toLowerCase());\n    props.showAlert(\"Text is LowerCased\", \"success\");\n  };\n\n  const handleClearClick = () => {\n    setText(\"\");\n    props.showAlert(\"Text is cleared\", \"success\");\n  };\n\n  const handleCaptilizeClick = () => {\n    const arr = text.split(\" \");\n    for (let i = 0; i < arr.length; i++) {\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    let str = arr.join(\" \");\n    setText(str);\n    props.showAlert(\"Text is Captilized\", \"success\");\n  };\n\n  const handleCopyClick = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Text is Copied\", \"success\");\n  };\n\n  const handleSpaceClick = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Text spaces are removed\", \"success\");\n  };\n\n  const [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"container\" style = {{color: props.mode === 'dark' ? 'white' : 'black'}}>\n        <div className=\"mb-3\">\n          <h1> {props.heading} </h1>\n          <textarea\n          style = {{backgroundColor: props.mode === 'dark' ? '#042743' : 'white',color: props.mode === 'dark' ? 'white' : 'black'}}\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnchange}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <div className=\"container\" >\n          <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\n            Convert Uppercase\n          </button>\n          <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>\n            Convert LowerCase\n          </button>\n          <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\n            Clear Text\n          </button>\n          <button\n            className=\"btn btn-primary mx-2\"\n            onClick={handleCaptilizeClick}\n          >\n            Captilized Text\n          </button>\n          <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>\n            Copy Text\n          </button>\n          <button className=\"btn btn-primary mx-2\" onClick={handleSpaceClick}>\n            Remove Extra Spaces\n          </button>\n        </div>\n      </div>\n      <div className=\"container my-2\" style = {{color: props.mode === 'dark' ? 'white' : 'black'}}>\n        <h2> Your text</h2>\n        <p>\n          {text.split(\" \").length} words, {text.length} characters\n        </p>\n        <p>Minutes to read {text.split(\" \").length * 0.008}</p>\n        <h3>Preview</h3>\n        <p> {text.length>0?text:\"Enter something in text above\"} </p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n\n    const capitalize = (msg) => {\n        const lower = msg.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\n    }\n\n  return (\n    props.alert && \n       <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong> {capitalize(props.alert.type)} </strong> : {props.alert.msg}\n      </div>\n  );\n}\n","import \"./App.css\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\"\nimport { useState } from \"react/cjs/react.development\";\nimport Alert from \"./components/Alert\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"this is dark\", \"primary\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"this is light\", \"success\");\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtlis\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n        <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">  */}\n            <TextForm\n              mode={mode}\n              showAlert={showAlert}\n              heading=\"Enter a text to analyze\"\n            />\n          {/* </Route>\n          \n        </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}